-- MySQL Script generated by MySQL Workbench
-- Thu Oct  3 23:43:08 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema codeVenture
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `codeVenture` ;

-- -----------------------------------------------------
-- Schema codeVenture
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `codeVenture` DEFAULT CHARACTER SET utf8 ;
USE `codeVenture` ;

-- -----------------------------------------------------
-- Table `codeVenture`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `codeVenture`.`users` ;

CREATE TABLE IF NOT EXISTS `codeVenture`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(255) NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codeVenture`.`credentials`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `codeVenture`.`credentials` ;

CREATE TABLE IF NOT EXISTS `codeVenture`.`credentials` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_credentials_users_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_credentials_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `codeVenture`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codeVenture`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `codeVenture`.`roles` ;

CREATE TABLE IF NOT EXISTS `codeVenture`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `roles` VARCHAR(255) NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_roles_users1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_roles_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `codeVenture`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codeVenture`.`lessons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `codeVenture`.`lessons` ;

CREATE TABLE IF NOT EXISTS `codeVenture`.`lessons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `description` VARCHAR(255) NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_groups_teachers1_idx` (`role_id` ASC) ,
  CONSTRAINT `fk_groups_teachers1`
    FOREIGN KEY (`role_id`)
    REFERENCES `codeVenture`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codeVenture`.`specific_lessons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `codeVenture`.`specific_lessons` ;

CREATE TABLE IF NOT EXISTS `codeVenture`.`specific_lessons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `lesson_id` INT NOT NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_specific_groups_groups1_idx` (`lesson_id` ASC) ,
  INDEX `fk_specific_groups_users1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_specific_groups_groups1`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `codeVenture`.`lessons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_specific_groups_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `codeVenture`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codeVenture`.`levels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `codeVenture`.`levels` ;

CREATE TABLE IF NOT EXISTS `codeVenture`.`levels` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `lesson_id` INT NOT NULL,
  `level_name` VARCHAR(45) NULL,
  `content` TEXT NULL,
  `isTask` TINYINT NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_challenges_groups1_idx` (`lesson_id` ASC) ,
  CONSTRAINT `fk_challenges_groups1`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `codeVenture`.`lessons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codeVenture`.`challenge_answers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `codeVenture`.`challenge_answers` ;

CREATE TABLE IF NOT EXISTS `codeVenture`.`challenge_answers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `specific_lesson_id` INT NOT NULL,
  `task_id` INT NOT NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_challenge_answers_specific_groups1_idx` (`specific_lesson_id` ASC) ,
  INDEX `fk_challenge_answers_materials1_idx` (`task_id` ASC) ,
  CONSTRAINT `fk_challenge_answers_specific_groups1`
    FOREIGN KEY (`specific_lesson_id`)
    REFERENCES `codeVenture`.`specific_lessons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_challenge_answers_materials1`
    FOREIGN KEY (`task_id`)
    REFERENCES `codeVenture`.`levels` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
